{"version":3,"sources":["components/Chart/Chart.module.css","components/GraphTile/GraphTitle.module.css","components/StatsTitle/StatsTitle.module.css","Images/logo-covid.png","components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/GraphTile/GraphTitle.jsx","components/StatsTitle/StatsTitle.jsx","App.js","index.js","firebase-config.js","components/CountryPicker/CountryPicker.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","recoveryPercentage","suffix","decimals","deathsPercentage","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","borderWidth","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","InputLabel","shrink","htmlFor","Select","defaultValue","onChange","e","target","input","Input","id","displayEmpty","selectEmpty","MenuItem","i","key","FormHelperText","GraphTitle","graphTitle","StatsTitle","statsTitle","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","document","getElementById"],"mappings":"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","file":"static/js/main.0d54b49a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1DQ8h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"graphTitle\":\"GraphTitle_graphTitle__32rt5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statsTitle\":\"StatsTitle_statsTitle__2OGiO\"};","module.exports = __webpack_public_path__ + \"static/media/logo-covid.c920ecfb.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__GlXVA\",\"card\":\"Cards_card__6kS9G\",\"infected\":\"Cards_infected__1KHXe\",\"active\":\"Cards_active__3lfHO\",\"recoveryPercentage\":\"Cards_recoveryPercentage__2o-X2\",\"recovered\":\"Cards_recovered__2ykPk\",\"deathsPercentage\":\"Cards_deathsPercentage__RfuKX\",\"deaths\":\"Cards_deaths__5E0TN\"};","import React from 'react';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n    if (!confirmed) {\r\n        return 'Loading... ';\r\n    }\r\n    return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={confirmed.value} duration={5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles, styles.recoveryPercentage)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovery recoveryPercentage</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp suffix={\"%\"} decimals={2} start={0} end={(recovered.value / confirmed.value) * 100} duration={5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Recovery percentage of COVID-19 cases</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={recovered.value} duration={5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp start={0} end={deaths.value} duration={5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles, styles.deathsPercentage)}>\r\n                    <CardContent>\r\n                        <Typography color=\"textSecondary\" gutterBottom>Death Percentage</Typography>\r\n                        <Typography variant=\"h5\">\r\n                            <CountUp suffix={\"%\"} decimals={2} start={0} end={(deaths.value / confirmed.value) * 100} duration={5} separator=\",\" />\r\n                        </Typography>\r\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant=\"body2\">Death percentage of COVID-19 cases</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n    let changeableUrl = url;\r\n\r\n    if(country) {\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n        console.log(await axios.get(changeableUrl));\r\n        return { confirmed, recovered, deaths, lastUpdate, };\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n\r\n        return modifiedData;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data: { countries }} = await axios.get(`${url}/countries`);\r\n        \r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import React, { useState, useEffect} from 'react';\r\nimport { fetchDailyData } from '../../api';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        fetchAPI();\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n        ? (\r\n            <Line \r\n            data={{\r\n                labels: dailyData.map(({ date }) => date),\r\n                datasets: [{\r\n                    data: dailyData.map(({ confirmed }) => confirmed),\r\n                    label: 'Infected',\r\n                    fill: false,\r\n                    lineTension: 1,\r\n                    backgroundColor: 'rgba(144, 99, 255,0.4)',\r\n                    borderColor: 'rgba(207, 35, 23,1)',\r\n                    borderCapStyle: 'butt',\r\n                    borderDash: [],\r\n                    borderDashOffset: 0.0,\r\n                    borderJoinStyle: 'miter',\r\n                    pointBorderColor: 'rgba(41, 41, 41,1)',\r\n                    pointBackgroundColor: '#fff',\r\n                    pointBorderWidth: 1,\r\n                    pointHoverRadius: 5,\r\n                    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                    pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                    pointHoverBorderWidth: 2,\r\n                    pointRadius: 2,\r\n                    pointHitRadius: 10,\r\n                    borderWidth: 7,\r\n                }, {\r\n                    data: dailyData.map(({ deaths }) => deaths),\r\n                    label: 'Deaths',\r\n                    fill: false,\r\n                    lineTension: 0.1,\r\n                    backgroundColor: 'rgba(41, 41, 41,0.4)',\r\n                    borderColor: 'rgba(23, 60, 207,1)',\r\n                    borderCapStyle: 'butt',\r\n                    borderDash: [],\r\n                    borderDashOffset: 0.0,\r\n                    borderJoinStyle: 'miter',\r\n                    pointBorderColor: 'rgba(41, 41, 41,1)',\r\n                    pointBackgroundColor: '#fff',\r\n                    pointBorderWidth: 1,\r\n                    pointHoverRadius: 5,\r\n                    pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n                    pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n                    pointHoverBorderWidth: 2,\r\n                    pointRadius: 2,\r\n                    pointHitRadius: 10,\r\n                    borderWidth: 7,\r\n                }],\r\n            }}\r\n        />) : null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed\r\n        ? (\r\n            <Bar \r\n                data={{\r\n                    labels: ['Infected', 'Recovered', 'Deaths'],\r\n                    datasets: [{\r\n                        label: 'People',\r\n                        backgroundColor: [\r\n                            'rgba(0, 0, 255, 0.5)',\r\n                            'rgba(0, 255, 0, 0.5)',\r\n                            'rgba(255, 0, 0, 0.5)',\r\n                        ],\r\n                        data:[confirmed.value, recovered.value, deaths.value]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    legend: { display: false},\r\n                    title: { display: true, text:`Current state in ${country}`},\r\n                }}\r\n            />\r\n        ) : null\r\n    );\r\n\r\n    return (\r\n        <div className={styles.container}>\r\n            {country ? barChart : lineChart}\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Chart;","import React,  { useState, useEffect } from 'react';\r\nimport { Select, FormControl } from '@material-ui/core';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n          <InputLabel shrink htmlFor=\"country-label-placeholder\">\r\n            Country\r\n          </InputLabel>\r\n          <Select\r\n            defaultValue=\"\"\r\n            onChange={(e) => handleCountryChange(e.target.value)}\r\n            input={<Input name=\"country\" id=\"country-label-placeholder\" />}\r\n            displayEmpty\r\n            name=\"country\"\r\n            className={styles.selectEmpty} >\r\n            <MenuItem value=\"\">Global</MenuItem>\r\n            {fetchedCountries.map((country,  i) => <option key={i} value={country}>{country}</option>)}\r\n          </Select>\r\n          <FormHelperText>Select the desired country!</FormHelperText>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport styles from './GraphTitle.module.css';\r\n\r\nconst GraphTitle = () => {\r\n    return (\r\n        <div>\r\n            <h1 className={styles.graphTitle}>Covid19 Graphs</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GraphTitle;","import React from 'react';\r\n\r\nimport styles from './StatsTitle.module.css';\r\n\r\nconst StatsTitle = () => {\r\n    return (\r\n        <div>\r\n            <h1 className={styles.statsTitle}>Covid19 Stats</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatsTitle;","import React from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker, GraphTitle, StatsTitle } from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchData }  from './api';\r\n\r\nimport coronaImage from './Images/logo-covid.png';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState( { data: fetchedData });\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const fetchedData = await fetchData(country);\r\n        this.setState({ data: fetchedData, country: country });\r\n    }\r\n\r\n    render() {\r\n        const { data, country } = this.state;\r\n\r\n        return (\r\n            <div className={styles.container}>\r\n                <img className={styles.image} src={coronaImage} alt=\"COVID-19\"/>\r\n                <StatsTitle/>\r\n                <Cards data={data}/>\r\n                <GraphTitle/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data={data} country={country}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nimport firebaseConfig from './firebase-config';\r\n\r\nimport {\r\n    FirebaseAppProvider\r\n} from 'reactfire';\r\n\r\nReactDOM.render((\r\n    <FirebaseAppProvider firebaseConfig={firebaseConfig}>\r\n        <App />\r\n    </FirebaseAppProvider>\r\n), document.getElementById('root'));","export default {\r\n    apiKey: \"AIzaSyDpldc-7zXygC8FLQ_u6iUg0yuIbYjfzdQ\",\r\n    authDomain: \"corona-tracker-3c274.firebaseapp.com\",\r\n    databaseURL: \"https://corona-tracker-3c274.firebaseio.com\",\r\n    projectId: \"corona-tracker-3c274\",\r\n    storageBucket: \"corona-tracker-3c274.appspot.com\",\r\n    messagingSenderId: \"719703821451\",\r\n    appId: \"1:719703821451:web:b1b5a8d1438e4d002b988e\",\r\n    measurementId: \"G-VPX802YWZE\"\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__jOTL4\",\"root\":\"CountryPicker_root__22z09\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1hLIj\",\"image\":\"App_image__3J2lE\"};"],"sourceRoot":""}